{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-37513727-1","body":"# check_mk\r\n\r\nPuppet module for:\r\n\r\n* Installing and configuring the Open Monitoring Distribution (OMD) which\r\n  includes Nagios, check_mk and lots of other tools\r\n\r\n* Installing and configuring check_mk agents\r\n\r\nAgent hostnames are automatically added to the server all_hosts configuration\r\nusing stored configs.\r\n\r\nCurrently only tested on Redhat-like systems.\r\n\r\n## Server\r\n\r\n* Installs omd package either using the system repository (eg. yum, apt) or\r\n  from a package file retrieved from the Puppet file store\r\n\r\n* Populates the all_hosts array in /etc/check_mk/main.mk with hostnames\r\n  exported by check::agent classes on agent hosts\r\n\r\n### Example 1\r\n\r\n    include check_mk\r\n\r\nInstalls the 'monitoring' package from the system repository. The default 'monitoring' site is used.\r\n\r\n### Example 2\r\n\r\n    class { 'check_mk':\r\n      filestore => 'puppet:///files/check_mk',\r\n      package   => 'omd-0.56-rh60-29.x86_64.rpm'\r\n    }\r\n\r\nInstalls the specified omd package after retrieving it from the Puppet file store.\r\n\r\n### Example 3\r\n\r\n    class { 'check_mk':\r\n      site => 'acme',\r\n    }\r\n\r\nInstalls the omd package from the system repository.  A site called 'acme' is\r\ncreated making the URL http://hostname/acme/check_mk/ running as the 'acme' user.\r\n\r\n### check_mk parameters\r\n\r\n*package*: The omd package (rpm or deb) to install. Optional.\r\n\r\n*filestore*: The Puppet file store location where the package can be found (eg. 'puppet:///files/check_mk'). Optional.\r\n\r\n*host_groups*: A hash with the host group names as the keys with a list of host tags to match as values. (See 'Host groups and tags' below). Optional.\r\n\r\n*site*: The name of the omd site (and the user/group it runs as). Default: 'monitoring'\r\n\r\n*workspace*: The directory to use to store files used during installation.  Default: '/root/check_mk'\r\n\r\n### Notes\r\n\r\n* A user and group with the same value as the site parameter is created.  By default this is 'monitoring'.\r\n\r\n* The URL is http://yourhostname/sitename/check_mk/ - for example http://monhost.domain/monitoring/check_mk/\r\n\r\n* The default username/password is omdadmin/omd. To change this or add additional users log in as the site user and run htpasswd - for example:\r\n\r\n    monitoring$ htpasswd -b ~/etc/htpasswd guest guest\r\n\r\n* A user called 'guest' is configured as a guest user but is not enabled unless a password is set (as above).\r\n\r\n* RedHat-like RPM downloads from http://omdistro.org/projects/omd-redhat/files\r\n\r\n## Agent\r\n\r\n* Installs the check_mk-agent and check_mk-agent-logwatch packages\r\n\r\n* Configures the /etc/xinetd.d/check_mk configuration file\r\n\r\n### Example 1\r\n\r\n    include check_mk::agent\r\n\r\nInstalls the check_mk and check_mk_logwatch packages from the system repository\r\nand configures /etc/xinetd.d/check_mk with no IP whitelist restrictions.\r\n\r\n### Example 2\r\n\r\n    class { 'check_mk::agent':\r\n      version => '1.2.0p3-1',\r\n      ip_whitelist => [ '10.7.96.21', '10.7.96.22' ],\r\n    }\r\n\r\nInstalls the specified versions of the check_mk and check_mk_logwatch packages\r\nafter retrieving them from the Puppet file store.  Configures\r\n/etc/xinetd.d/check_mk so that only the specified IPs (and localhost/127.0.0.1)\r\nare allowed to connect.\r\n\r\n### check_mk::agent parameters\r\n\r\n*filestore*: The Puppet file store location where the packages can be found (eg. 'puppet:///files/check_mk'). Optional.\r\n\r\n*ip_whitelist*: The list of IP addresses that are allowed to retrieve check_mk\r\ndata. (Note that localhost is always allowed to connect.) By default any IP can\r\nconnect.\r\n\r\n*port*: The port the check_mk agent listens on. Default: '6556'\r\n\r\n*server_dir*: The directory in which the check_mk_agent executable is located.\r\nDefault: '/usr/bin'\r\n\r\n*use_cache*: Whether or not to cache the results - useful with redundant\r\nmonitoring server setups.  Default: 'false'\r\n\r\n*user*: The user that the agent runs as. Default: 'root'\r\n\r\n*version*: The version in the check_mk packages - for example if the RPM is\r\n'check_mk-agent-1.2.0p3-1.noarch.rpm' then the version is '1.2.0p3-1'.\r\nOnly required if a filestore is used.\r\n\r\n*workspace*: The directory to use to store files used during installation.\r\nDefault: '/root/check_mk'\r\n\r\n## Host groups and tags\r\n\r\nBy default check_mk puts all hosts into a group called 'check_mk' but where you\r\nhave more than a few you will often want your own groups.  We can do this by\r\nsetting host tags on the agents and then configuring host groups on the server\r\nside to match hosts with these tags.\r\n\r\nFor example in the hiera config for your agent hosts you could have:\r\n\r\n    check_mk::agent::host_tags:\r\n      - '%{osfamily}'\r\n\r\nand on the monitoring host you could have:\r\n\r\n    check_mk::host_groups:\r\n      RedHat:\r\n        description: 'RedHat or_CentOS hosts'\r\n        host_tags:\r\n          - RedHat\r\n      Debian:\r\n        description: 'Debian or Ubuntu_hosts'\r\n        host_tags:\r\n          - Debian\r\n      SuSE:\r\n        description: 'SuSE hosts'\r\n        host_tags:\r\n          - Suse\r\n\r\nYou can of course have as many host tags as you like. I have custom facts for\r\nthe server role and the environment type (dev, qa, stage, prod) and define\r\ngroups based on the role and envtype host tags.\r\n\r\nRemember to run the Puppet agent on your agent hosts to export any host tags\r\nand run the Puppet agent on the monitoring host to pick up any changes to the\r\nhost groups.\r\n\r\n## Static host config\r\n\r\nHosts that do not run Puppet with the check_mk module are not automatically\r\nadded to the all_hosts list in main.mk. To manually include these hosts you can\r\nadd them to '/omd/sites/monitoring/etc/check_mk/all_hosts_static' (replacing\r\n'monitoring' with your site name).  Use the quoted fully qualified domain name\r\nwith a two-space prefix and a comma suffix - for example:\r\n\r\n      'host1.domain',\r\n      'host2.domain',\r\n\r\nYou can also include host tags - for example:\r\n\r\n      'host1.domain|windows|dev',\r\n      'host2.domain|windows|prod',\r\n\r\nRemember to run the Puppet agent on your monitoring host to pick up any changes.\r\n","name":"Puppet-check mk","tagline":"Install and configure check_mk agent and Nagios plugin"}